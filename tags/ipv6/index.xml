<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ipv6 on Whatever blog</title>
    <link>https://dsunn.github.io/blog/tags/ipv6/</link>
    <description>Recent content in Ipv6 on Whatever blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Mar 2024 07:33:25 -0500</lastBuildDate><atom:link href="https://dsunn.github.io/blog/tags/ipv6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cloudflare ddns的routeros脚本</title>
      <link>https://dsunn.github.io/blog/post/mikrotik_cf_ddns/</link>
      <pubDate>Tue, 05 Mar 2024 07:33:25 -0500</pubDate>
      
      <guid>https://dsunn.github.io/blog/post/mikrotik_cf_ddns/</guid>
      <description>
        
          
            &lt;p&gt;在参考了j大佬的&lt;a href=&#34;https://www.digs.eu.org/2024/01/04/ROS%20cloudflare%20DDNS%E7%9B%B8%E5%85%B3%E8%84%9A%E6%9C%AC/&#34;&gt;博客&lt;/a&gt;和这位作者的&lt;a href=&#34;https://gist.githubusercontent.com/kolobus/18680f8fb01ce3003cb9a3f82c9d30e1/raw/cf8ecd84fc0e5dccb7298422c7d8c40410c345a3/cf-ddns.rsc&#34;&gt;脚本&lt;/a&gt;的脚本后, 魔改的.&lt;/p&gt;
&lt;p&gt;适用在cloudflare上更新ipv4和ipv6的动态ip; 和原作者不同的是, 我的脚本是直接从ros接口上取相应ip, 其实我这脚本是放在ppp profile-on up-script中, 在拨号完成后执行一次, 而不是定时反复执行, 故相应修改了代码.&lt;/p&gt;
&lt;p&gt;token, zone_id, record_id等请先行获取, 获取方法在前述j大佬博客中有所提及.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Cloudflare Dynamic DNS update script
# Required policy: read, write, test, policy
# Add this script to scheduler
# Install DigiCert root CA or disable check-certificate
# Modified from https://gist.github.com/kolobus/18680f8fb01ce3003cb9a3f82c9d30e1
# Configuration ---------------------------------------------------------------------

:local TOKEN &amp;#34;&amp;#34;

:local ZONEIDv6 &amp;#34;&amp;#34;
:local RECORDIDv6 &amp;#34;&amp;#34;
:local RECORDNAMEv6 &amp;#34;&amp;#34;
:local IP6NEW

:local ZONEIDv4 &amp;#34;&amp;#34;
:local RECORDIDv4 &amp;#34;&amp;#34;
:local RECORDNAMEv4 &amp;#34;&amp;#34;
:local IP4NEW

:local WANIF &amp;#34;&amp;#34;

#------------------------------------------------------------------------------------




:if ([/interface get $WANIF value-name=running]) do={

    # IPv6 check

    :local &amp;#34;IP6NEW&amp;#34; [/ipv6/address get [:pick [find dynamic global interface=$WANIF] 0 ] address]
    :set &amp;#34;IP6NEW&amp;#34; [:pick $&amp;#34;IP6NEW&amp;#34; 0 [:find $&amp;#34;IP6NEW&amp;#34; &amp;#34;/&amp;#34;]]

        :local url &amp;#34;https://api.cloudflare.com/client/v4/zones/$ZONEIDv6/dns_records/$RECORDIDv6/&amp;#34;

        :local cfapi [/tool fetch http-method=put mode=https url=$url check-certificate=no output=user as-value \
            http-header-field=&amp;#34;Authorization: Bearer $TOKEN&amp;#34; \
            http-data=&amp;#34;{\&amp;#34;type\&amp;#34;:\&amp;#34;AAAA\&amp;#34;,\&amp;#34;name\&amp;#34;:\&amp;#34;$RECORDNAMEv6\&amp;#34;,\&amp;#34;content\&amp;#34;:\&amp;#34;$IP6NEW\&amp;#34;,\&amp;#34;ttl\&amp;#34;:120,\&amp;#34;proxied\&amp;#34;:false}&amp;#34;]

        :log info &amp;#34;CF-DDNS: $RECORDNAMEv6 is now $IP6NEW&amp;#34;


   # IPv4 check

    :local ipaddr [/ip address get [/ip address find interface=$WANIF] address]
    :set IP4NEW [:pick $ipaddr 0 ([len $ipaddr] -3)]

        :local url &amp;#34;https://api.cloudflare.com/client/v4/zones/$ZONEIDv4/dns_records/$RECORDIDv4/&amp;#34;

        :local cfapi [/tool fetch http-method=put mode=https url=$url check-certificate=no output=user as-value \
            http-header-field=&amp;#34;Authorization: Bearer $TOKEN&amp;#34; \
            http-data=&amp;#34;{\&amp;#34;type\&amp;#34;:\&amp;#34;A\&amp;#34;,\&amp;#34;name\&amp;#34;:\&amp;#34;$RECORDNAMEv4\&amp;#34;,\&amp;#34;content\&amp;#34;:\&amp;#34;$IP4NEW\&amp;#34;,\&amp;#34;ttl\&amp;#34;:120,\&amp;#34;proxied\&amp;#34;:false}&amp;#34;]

        :log info &amp;#34;CF-DDNS: $RECORDNAMEv4 is now $IP4NEW&amp;#34;


} else={

    :log info &amp;#34;CF-DDNS: $WANIF is not currently running, quitting&amp;#34;

}
&lt;/code&gt;&lt;/pre&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Ros通过dhcp6下发ipv6 dns的设定</title>
      <link>https://dsunn.github.io/blog/post/ros_dhcp6/</link>
      <pubDate>Mon, 05 Jun 2023 09:32:08 -0400</pubDate>
      
      <guid>https://dsunn.github.io/blog/post/ros_dhcp6/</guid>
      <description>
        
          
            &lt;p&gt;修改于6/5/2023&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/ipv6 dhcp-server option
 add code=23 name=dns value=0xfd80000000000000ccf2bbfffe0abcf1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;此外, ros的ipv6-ND中不勾选advertise dns, 勾选other config.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
